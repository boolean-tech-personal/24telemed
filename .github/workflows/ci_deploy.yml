name: Deploy to Server

on:
  push:
    branches:
      - Setup-CI-pipeline-for-docker-github-actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install SSH Client
        run: sudo apt-get install openssh-client -y

      - name: Set up SSH Agent and add private key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_ADDRESS }} << 'EOF'
            # Install Nginx if it's not already installed
            sudo apt-get update
            sudo apt-get install -y nginx
            
            # Pull the latest Docker images
            docker pull ${{ secrets.DOCKER_USERNAME }}/anambra-telemed-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/doctor-app:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/personnel-app:latest

            # Stop and remove existing containers
            docker stop anambra-backend || true
            docker rm anambra-backend || true
            docker stop doctor-app || true
            docker rm doctor-app || true
            docker stop personnel-app || true
            docker rm personnel-app || true
            
            # Run the application containers with port mappings
            docker run -d --name anambra-backend -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/anambra-telemed-backend:latest
            docker run -d --name doctor-app -p 8001:80 ${{ secrets.DOCKER_USERNAME }}/doctor-app:latest
            docker run -d --name personnel-app -p 8002:80 ${{ secrets.DOCKER_USERNAME }}/personnel-app:latest

            # Create Nginx configuration for reverse proxy
            sudo tee /etc/nginx/sites-available/telemed <<EOL
            server {
                listen 80;
                server_name telemedadmin.anambrastate.gov.ng;
                location / {
                    proxy_pass http://localhost:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }

            server {
                listen 80;
                server_name telemedapp.anambrastate.gov.ng;
                location / {
                    proxy_pass http://localhost:8001;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }

            server {
                listen 80;
                server_name telemed.anambrastate.gov.ng;
                location / {
                    proxy_pass http://localhost:8002;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOL

            # Enable the configuration by creating a symlink
            sudo ln -s /etc/nginx/sites-available/telemed /etc/nginx/sites-enabled/

            # Test Nginx configuration for syntax errors
            sudo nginx -t

            # Reload Nginx to apply the new configuration
            sudo systemctl reload nginx
          EOF
