name: Build & Deploy Images

on:
  push:
    branches:
      - main
      - Setup-CI-pipeline-for-docker-github-actions
    tags:
      - '!*'
    # paths:
    #   - "backend/**"

jobs:
  build-backend-image:
    runs-on: ubuntu-latest
    environment: telemedbackend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/anambra-telemed-backend:latest
          build-args: |
            EMAIL_FROM=${{ vars.EMAIL_FROM }}
            ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }}
            ALLOWED_ORIGINS=${{ vars.ALLOWED_ORIGINS }}
            REDIS_URL=${{ vars.REDIS_URL }}
            SENDGRID_API_KEY=${{ vars.SENDGRID_API_KEY }}
            SENDGRID_TEMPLATE_ID_PASSWORD_RESET_OTP=${{ vars.SENDGRID_TEMPLATE_ID_PASSWORD_RESET_OTP }}
            VIDEO_SDK_CALL_WEBHOOK=${{ vars.VIDEO_SDK_CALL_WEBHOOK }}
            VIDEO_SDK_CALL_DURATION_LIMIT=${{ vars.VIDEO_SDK_CALL_DURATION_LIMIT }}

            VIDEO_SDK_TOKEN=${{ secrets.VIDEO_SDK_TOKEN }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            VIDEO_SDK_PUBLIC_KEY=${{ secrets.VIDEO_SDK_PUBLIC_KEY }}

  build-frontend-images:
    runs-on: ubuntu-latest
    environment: telemedfrontend
    defaults:
        run:
          working-directory: ./frontend
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build doctor-app
        env:
          VITE_VIDEO_SDK_TOKEN: ${{ secrets.VITE_VIDEO_SDK_TOKEN }}
          VITE_API_BASE: ${{ vars.VITE_API_BASE }}
          VITE_WEBSOCKET_BASE: ${{ vars.VITE_WEBSOCKET_BASE }}
        run: |
          npm run build:doctor

      - name: Build personnel-app
        env:
          VITE_VIDEO_SDK_TOKEN: ${{ secrets.VITE_VIDEO_SDK_TOKEN }}
          VITE_API_BASE: ${{ vars.VITE_API_BASE }}
          VITE_WEBSOCKET_BASE: ${{ vars.VITE_WEBSOCKET_BASE }}
        run: |
          npm run build:personnel

      - name: Build Docker image for doctor-app
        run: |
          docker build \
            -t ${{ secrets.DOCKER_USERNAME }}/doctor-app:latest \
            -f apps/doctor-app/Dockerfile .

      - name: Build Docker image for personnel-app
        run: |
          docker build \
            -t ${{ secrets.DOCKER_USERNAME }}/personnel-app:latest \
            -f apps/personnel-app/Dockerfile .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image for doctor-app
        run: docker push ${{ secrets.DOCKER_USERNAME }}/doctor-app:latest

      - name: Push Docker image for personnel-app
        run: docker push ${{ secrets.DOCKER_USERNAME }}/personnel-app:latest


  deploy-apps:
    runs-on: ubuntu-latest
    needs: 
        - build-backend-image
        - build-frontend-images

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install SSH Client
        run: sudo apt-get install openssh-client -y

      - name: Set up SSH Agent and add private key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Nginx if it's not already installed
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_ADDRESS }} << 'EOF'
            sudo apt-get update
            sudo apt-get install -y nginx
          EOF

      - name: Pull & Run latest images
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_ADDRESS }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/anambra-telemed-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/doctor-app:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/personnel-app:latest

            # Stop and remove existing containers
            docker stop anambra-backend || true
            docker rm anambra-backend || true
            docker stop doctor-app || true
            docker rm doctor-app || true
            docker stop personnel-app || true
            docker rm personnel-app || true
            
            # Run the application containers with port mappings
            docker run -d --name anambra-backend -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/anambra-telemed-backend:latest
            docker run -d --name doctor-app -p 8001:80 ${{ secrets.DOCKER_USERNAME }}/doctor-app:latest
            docker run -d --name personnel-app -p 8002:80 ${{ secrets.DOCKER_USERNAME }}/personnel-app:latest
          EOF

      - name: Write Nginx configuration to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_ADDRESS }} << 'EOF'
            sudo tee /etc/nginx/sites-available/default <<EOL
            server {
              listen 80;
              server_name telemedadmin.anambrastate.gov.ng;
              location / {
                  proxy_pass http://localhost:8000;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }

            server {
              listen 80;
              server_name telemedapp.anambrastate.gov.ng;
              location / {
                  proxy_pass http://localhost:8001;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }

            server {
              listen 80;
              server_name telemed.anambrastate.gov.ng;
              location / {
                  proxy_pass http://localhost:8002;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto \$scheme;
              }
            }

      - name: Enable Nginx configuration, test, and restart Nginx
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_ADDRESS }} << 'EOF'
            sudo ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl reload nginx || sudo systemctl start nginx
          EOF
